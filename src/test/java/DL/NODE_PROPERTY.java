package DL;


/**
 * Created by LENOVO on 12/15/2015.
 */
public enum NODE_PROPERTY {

    NAME(1, "NAME"),
    LATITUDE(2, "LATITUDE"),
    LONGITUDE(3, "LONGITUDE"),
    LANGUAGE(4, "LANGUAGE"),
    TYPE(5, "TYPE"), // For example: Type of Institute - Museum, Landmark - Park
    WEBSITE(6, "WEBSITE"),
    GENRE(7, "GENRE"),
    ARTICLE_LOCATION(8, "ARTICLE_LOCATION"),
    ARTICLE_TYPE(9, "ARTICLE_TYPE"),
    SUB_TYPE(10, "SUB_TYPE"),
    ID(11, "ID"),
    SOURCE_TYPE(12, "SOURCE_TYPE"),
    ALT(13, "ALT"),
    MEDIA_SOURCE(14, "MEDIA_SOURCE"),
    INFO(15, "INFO"),
    SOURCE_LABEL(16, "SOURCE_LABEL"),
    //ADDITIONAL_PROPETY(16,"ADDITIONAL_PROPETY"),// TODO - REMOVE!!!!!!!!
    SOURCE_NODE_ID(17, "SOURCE_NODE_ID"),
    CREATION_TIME(18, "CREATION_TIME"),
    EMAIL(19, "EMAIL"),
    POINTS(20, "POINTS"),
    TITLE(21, "TITLE"),
    AUTHOR_NAME(22, "AUTHOR_NAME"),
    AUTHOR_URL(23, "AUTHOR_URL"),
    EXCERPT(24, "EXCERPT"),
    PHOTO_URL(25, "PHOTO_URL"),
    ARTICLE_DATE(26, "ARTICLE_DATE"),
    UPDATE_TIME(27, "UPDATE_TIME"),
    ARTICLE_TERM_ID(28, "ARTICLE_TERM_ID"),
    DISPLAY_NAME(29, "DISPLAY_NAME"),
    REGISTERED_DATE(30, "REGISTERED_DATE"),
    AUTHOR_ID(31, "AUTHOR_ID"),
    CREATION_YEAR(32, "CREATION_YEAR"),
    ADDRESS(33, "ADDRESS"),
    ZIP_CODE(34, "ZIP_CODE"),
    PHONE_NUMBER(35, "PHONE_NUMBER"),
    IS_GALLERY_SPACE(36, "IS_GALLERY_SPACE"),
    IS_OFFICE_SPACE(37, "IS_OFFICE_SPACE"),
    IS_PRIMARY_LOCATION(38, "IS_PRIMARY_LOCATION"),
    SEARCH_STR(39, "SEARCH_STR"),
    PARENT_POST_TITLE(40, "PARENT_POST_TITLE"),
    URL(41, "URL"),
    COCKTAILS(42, "COCKTAILS"),
    STARS(43, "STARS"),
    OPENING_HOURS(44, "OPENING_HOURS"),
    BREWERY(45, "BREWERY"),
    MICROBREWERY(46, "MICROBREWERY"),
    SMOKING(47, "SMOKING"),
    INTERNET_ACCESS(48, "INTERNET_ACCESS"),
    POST_ADDRESS(49, "POST_ADDRESS"),
    BREAKFAST(50, "BREAKFAST"),
    WHEELCHAIR(51, "WHEELCHAIR"),
    OPERATOR(52, "OPERATOR"),
    TAKEAWAY(53, "TAKEAWAY"),
    DELIVERY(54, "DELIVERY"),
    OUTDOOR_SEATING(55, "OUTDOOR_SEATING"),
    DRIVE_THROUGH(56, "DRIVE_THROUGH"),
    HOUSE_NUMBER(57, "HOUSE_NUMBER"),
    CONSCRIPTION_NUMBER(58, "CONSCRIPTION_NUMBER"),
    HOUSE_NAME(59, "HOUSE_NAME"),
    STREET(60, "STREET"),
    POSTCODE(61, "POSTCODE"),
    FULL_ADDRESS(62, "FULL_ADDRESS"),
    GOOGLE_URL(63, "GOOGLE_URL"),
    ARTICLE_MODIFIED_DATE(64, "ARTICLE_MODIFIED_DATE"),
    GOOGLE_NAME(65, "GOOGLE_NAME"),
    TRIPADVISOR_URL(66, "TRIPADVISOR_URL"),
    BUDGET(67, "BUDGET"),
    DESCRIPTION(68, "DESCRIPTION"),
    HOURS_PART_O_FROM_DAY(69, "HOURS_PART_0_FROM_DAY"),
    HOURS_PART_O_TO_DAY(70, "HOURS_PART_0_TO_DAY"),
    HOURS_PART_O_FROM_HOUR(71, "HOURS_PART_0_FROM_HOUR"),
    HOURS_PART_O_TO_HOUR(72, "HOURS_PART_0_TO_HOUR"),
    HOURS_PART_1_FROM_DAY(73, "HOURS_PART_1_FROM_DAY"),
    HOURS_PART_1_TO_DAY(74, "HOURS_PART_1_TO_DAY"),
    HOURS_PART_1_FROM_HOUR(75, "HOURS_PART_1_FROM_HOUR"),
    HOURS_PART_1_TO_HOUR(76, "HOURS_PART_1_TO_HOUR"),
    HOURS_PART_2_FROM_DAY(77, "HOURS_PART_2_FROM_DAY"),
    HOURS_PART_2_TO_DAY(78, "HOURS_PART_2_TO_DAY"),
    HOURS_PART_2_FROM_HOUR(79, "HOURS_PART_2_FROM_HOUR"),
    HOURS_PART_2_TO_HOUR(80, "HOURS_PART_2_TO_HOUR"),
    HOURS_PART_3_FROM_DAY(81, "HOURS_PART_3_FROM_DAY"),
    HOURS_PART_3_TO_DAY(82, "HOURS_PART_3_TO_DAY"),
    HOURS_PART_3_FROM_HOUR(83, "HOURS_PART_3_FROM_HOUR"),
    HOURS_PART_3_TO_HOUR(84, "HOURS_PART_3_TO_HOUR"),
    HOURS_PART_4_FROM_DAY(85, "HOURS_PART_4_FROM_DAY"),
    HOURS_PART_4_TO_DAY(86, "HOURS_PART_4_TO_DAY"),
    HOURS_PART_4_FROM_HOUR(87, "HOURS_PART_4_FROM_HOUR"),
    HOURS_PART_4_TO_HOUR(88, "HOURS_PART_4_TO_HOUR"),
    HOURS_PART_5_FROM_DAY(89, "HOURS_PART_5_FROM_DAY"),
    HOURS_PART_5_TO_DAY(90, "HOURS_PART_5_TO_DAY"),
    HOURS_PART_5_FROM_HOUR(91, "HOURS_PART_5_FROM_HOUR"),
    HOURS_PART_5_TO_HOUR(92, "HOURS_PART_5_TO_HOUR"),
    HOURS_PART_6_FROM_DAY(93, "HOURS_PART_6_FROM_DAY"),
    HOURS_PART_6_TO_DAY(94, "HOURS_PART_6_TO_DAY"),
    HOURS_PART_6_FROM_HOUR(95, "HOURS_PART_6_FROM_HOUR"),
    HOURS_PART_6_TO_HOUR(96, "HOURS_PART_6_TO_HOUR"),
    GRAPH_ENTITY(97, "GRAPH_ENTITY"),
    ORIGINAL_PHOTO_URL(98, "ORIGINAL_PHOTO_URL"),
    ARTICLE_CREATION_DATE(99, "ARTICLE_CREATION_DATE"),
    BIRTH_DATE(100, "BIRTH_DATE"),
    DEATH_DATE(101, "DEATH_DATE"),
    ARTWORK_TYPE(102, "ARTWORK_TYPE"),
    VIDEO_TYPE(103, "VIDEO_TYPE"),
    WIKI_ID(104, "WIKI_ID"),
    EXPIRATION_DATE(105, "EXPIRATION_DATE");

    private int value;
    private String name;

    NODE_PROPERTY(int value, String name) {
        this.value = value;
        this.name = name;
    }

    public int getValue() {
        return value;
    }

    public static NODE_PROPERTY fromInteger(int type) {
        for (NODE_PROPERTY nodeProperty : NODE_PROPERTY.values()) {
            if (type == nodeProperty.getValue()) {
                return nodeProperty;
            }
        }
        return null;
    }

    public static NODE_PROPERTY fromString(String name) {
        if (name != null) {
            for (NODE_PROPERTY b : NODE_PROPERTY.values()) {
                if (name.equalsIgnoreCase(b.name.toUpperCase())) {
                    return b;
                }
            }
        }
        return null;
    }
}
